# $Id: screen-keys.conf,v 1.7 2010-07-31 11:39:13 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.



# Unbind everything
# unbind-key -a
# source-file ~/.tmux.reset.conf


# Set the prefix to ^A.
unbind C-b
set -g prefix ^A
bind a send-prefix

bind-key -n C-s send-prefix

bind-key C-b send-prefix
bind-key : command-prompt


unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

bind-key C-k select-pane -U
bind-key C-h select-pane -L
bind-key C-j select-pane -D
bind-key C-l select-pane -R

# since tmux 2.1, the unzoom when switch pane was turned off 
# fix based on : https://github.com/tmux/tmux/issues/150
is_zoomed='echo "#{window_zoomed_flag}" | grep 1'
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim || $is_zoomed" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim || $is_zoomed" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim || $is_zoomed" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim || $is_zoomed" "send-keys C-l" "select-pane -R"
# bind -n C-\ if-shell "$is_vim || $is_zoomed" "send-keys C-\" "select-pane -l"

bind -r a select-pane -t .+1 \;  resize-pane -Z

unbind c
bind-key c new-window -c "#{pane_current_path}"

unbind %
bind-key % split-window -h -c "#{pane_current_path}"
unbind '"'
bind-key '"' split-window -c "#{pane_current_path}"

unbind l
bind C-a last-window

unbind BSpace
bind-key b previous-window

unbind c
bind-key c new-window -c "#{pane_current_path}"
unbind %
bind-key % split-window -h -c "#{pane_current_path}"
unbind '"'
bind-key '"' split-window -c "#{pane_current_path}"

# set -g mode-mouse on

set-window-option -g mode-keys vi

set-option -g history-limit 100000

set -g default-terminal "screen-256color"

# move x clipboard into tmux paste buffer
bind C-p run "xclip -o | tmux load-buffer - ; tmux paste-buffer"
#bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# # move tmux copy buffer into x clipboard
# bind C-y run "tmux save-buffer - | xclip -i"
# bind C-y run "tmux show-buffer | xclip -i -selection clipboard,primary"
bind C-y run "tmux save-buffer - | xclip -selection c"\; display-message "Buffer copied to clipboard"
# set the flow control
# c0-change-interval interval
# c0-change-trigger trigger


# bind C-S-1 select-layout even-horizontal
# bind C-S-2 select-layout even-vertical
# bind C-S-3 select-layout main-horizontal
# bind C-S-4 select-layout main-vertical
# bind C-S-5 select-layout tiled

# border colors 
set -g pane-active-border-bg default
set -g pane-active-border-fg yellow
set -g pane-border-fg white

# set -g default-terminal "xterm-color"
set -g default-command "reattach-to-user-namespace -l /bin/bash"

